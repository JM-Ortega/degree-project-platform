# ======================================================
# Configuración general del microservicio (API Gateway)
# ======================================================
spring:
  application:
    name: gateway-service

  # ======================================================
  # Spring Cloud Gateway
  # ======================================================
  cloud:
    gateway:
      # --------------------------------------------------
      # Rutas (proxy inverso hacia cada microservicio)
      # --------------------------------------------------
      routes:
        # ---------------- Auth ----------------
        - id: auth-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=2

        # ---------------- Academic ----------------
        - id: academic-project-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/academic/**
          filters:
            - StripPrefix=2
            # Límite de tamaño para uploads grandes (PDFs, documentos)
            - name: RequestSize
              args:
                maxSize: 60MB
            # Evita cache en navegadores / proxies (archivos sensibles)
            - AddResponseHeader=Cache-Control, no-store

        # ---------------- Coordinator ----------------
        - id: coordinator-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/coordinator/**
          filters:
            - StripPrefix=2
            # Límite de tamaño para adjuntos o revisiones
            - name: RequestSize
              args:
                maxSize: 60MB
            # Evita cache de documentos revisados o dictámenes
            - AddResponseHeader=Cache-Control, no-store

        # ---------------- Department Head ----------------
        - id: department-head-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/department/**
          filters:
            - StripPrefix=2
            # Límite de tamaño para resoluciones o actas
            - name: RequestSize
              args:
                maxSize: 60MB
            # Previene cache de información sensible
            - AddResponseHeader=Cache-Control, no-store

        # ---------------- Notification ----------------
        - id: notification-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/notification/**
          filters:
            - StripPrefix=2

      # --------------------------------------------------
      # Filtros globales (seguridad básica en headers)
      # --------------------------------------------------
      default-filters:
        # Evita detección automática de tipo MIME
        - name: AddResponseHeader
          args: { name: X-Content-Type-Options, value: nosniff }
        # No expone URL de origen al reenviar peticiones
        - name: AddResponseHeader
          args: { name: Referrer-Policy, value: no-referrer }

      # --------------------------------------------------
      # CORS global (para Postman / frontend externo)
      # --------------------------------------------------
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowed-origins: "*"             # Permite todos los orígenes
            allowed-methods: "*"             # Permite todos los métodos
            allowed-headers: "*"             # Permite todos los encabezados
            allow-credentials: false         # Obligatorio si se usa "*"
            exposed-headers:                 # Headers visibles al cliente
              - Content-Disposition
              - Content-Length
              - Content-Type
              - ETag
              - Last-Modified
            max-age: 3600                    # Cache del preflight (1h)

      # --------------------------------------------------
      # Cliente HTTP (timeouts del Gateway -> micros)
      # --------------------------------------------------
      httpclient:
        connect-timeout: 3000                # Tiempo máx. de conexión (ms)
        response-timeout: 5s                 # Tiempo máx. de respuesta (s)

# ======================================================
# Servidor embebido (Netty)
# ======================================================
server:
  port: 8080                                # Puerto del Gateway

# ======================================================
# Actuator (monitoreo y diagnóstico con CORS)
# ======================================================
management:
  endpoint:
    gateway:
      access: read-only                     # Exposición en modo lectura
    health:
      show-details: always                  # Muestra componentes en /health
  endpoints:
    web:
      exposure:
        include: health,info,gateway        # Endpoints visibles
      cors:
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
        allow-credentials: false

# ======================================================
# Logging (niveles y salida a archivo)
# ======================================================
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: INFO
  file:
    name: logs/${spring.application.name}.log
